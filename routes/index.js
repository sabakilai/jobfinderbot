"use stricts";
var express = require('express');
var db = require("../data/db.js");
var sms = require("../models/sms.js");
var new_sms = require("../models/new_sms.js");
var newChat = require("../models/newchat.js");
var async = require('async');
var router = express.Router();
var pg = require('pg');
let parser = require('../libs/parser');
let dict = require('../libs/dict');


/* GET home page. */
router.get('/', function(req, res, next) {
  res.render('index', { title: 'Express' });
});

router.post("/", function(req, res, next) {
  var ip = req.connection.remoteAddress;
    var event = req.body.event;
    var selectField = function() {
      return " –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∞–∫–∞–Ω—Å–∏–π, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –¥–ª—è —ç—Ç–æ–≥–æ –≤–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ü–∏—Ñ—Ä—É:\n1Ô∏è‚É£ –¢–æ–ø-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ .\n2Ô∏è‚É£ –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å. \n3Ô∏è‚É£ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª. \n4Ô∏è‚É£ –ë–∞–Ω–∫–∏, —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ, –ª–∏–∑–∏–Ω–≥. \n5Ô∏è‚É£ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –æ—Ö—Ä–∞–Ω–∞. \n6Ô∏è‚É£ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è. \n7Ô∏è‚É£ –ù–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. \n8Ô∏è‚É£ –î–∏–∑–∞–π–Ω, –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è. \n9Ô∏è‚É£ –î–æ–º–∞—à–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª. \n1‚É£0‚É£ –ó–∞–∫—É–ø–∫–∏, –ø–æ—Å—Ç–∞–≤–∫–∏, –í–≠–î . \n1‚É£1‚É£ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç, IT, —Ç–µ–ª–µ–∫–æ–º, —Å–≤—è–∑—å. \n1‚É£2‚É£ –õ–æ–≥–∏—Å—Ç–∏–∫–∞, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —Å–∫–ª–∞–¥. \n1‚É£3‚É£ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥, —Ä–µ–∫–ª–∞–º–∞, PR. \n1‚É£4‚É£  –ú–µ–¥–∏—Ü–∏–Ω–∞, —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∏–∫–∞. \n1‚É£5‚É£–ù–∞—É–∫–∞, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ \n1‚É£6‚É£–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤, HR. \n1‚É£7‚É£–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞, —Å–µ–∑–æ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞. \n1‚É£8‚É£–ü—Ä–æ–¥–∞–∂–∏ (—Ä–∞–±–æ—Ç–∞ –≤ –æ—Ñ–∏—Å–µ). \n1‚É£9‚É£–ü—Ä–æ–¥–∞–∂–∏ (—Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è).\n Ô∏è2‚É£0‚É£–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å.\n2‚É£1‚É£ –†–∞–±–æ—á–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª.\n2‚É£2‚É£–ü–æ–≤–∞—Ä–∞, –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—ã.\n2‚É£3‚É£–°–ú–ò, –ø–æ–ª–∏–≥—Ä–∞—Ñ–∏—è."
       + "\n Ô∏è2‚É£4‚É£–°–ø–æ—Ä—Ç, —Å–∞–ª–æ–Ω—ã –∫—Ä–∞—Å–æ—Ç—ã. \n2‚É£5‚É£–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ, –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å.\n2‚É£6‚É£–¢—É—Ä–∏–∑–º, –≥–æ—Å—Ç–∏–Ω–∏—Ü—ã. \n 2‚É£7‚É£–£—Å–ª—É–≥–∏, —Ä–µ–º–æ–Ω—Ç.\n2‚É£8‚É£–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è. \n2‚É£9‚É£–†–∞–±–æ—Ç–∞ –¥–ª—è –º–æ–ª–æ–¥–µ–∂–∏.\n3‚É£0‚É£–ë–µ–∑ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã, –Ω–∞—á–∞–ª–æ –∫–∞—Ä—å–µ—Ä—ã.";
    }
    var allComands = function (subscribed) {
      return "–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥: \n5‚É£ - –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—è—Ç—å –≤–∞–∫–∞–Ω—Å–∏–π.\n'–°–º–µ–Ω–∏—Ç—å', —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∞–∫–∞–Ω—Å–∏–π.\n'–ü–æ–¥–ø–∏—Å–∫–∞' - " +(subscribed ? "–æ—Ç–∫–ª—é—á–∏—Ç—å" : "–≤–∫–ª—é—á–∏—Ç—å") + " –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É."
    }

    if(event == "user/unfollow") {
    	var userId = req.body.data.id;
    	db.destroy({where:{userId: userId}}).then(function(err) {
        console.log("db destroyed");
      });
    }
    if(event == "user/follow") {
      var userId = req.body.data.id;
      db.create({userId: userId, ip: ip}).then(function(user) {
        console.log("user follows");
        newChat(userId, ip, function(err, res, body) {
          var chatId = body.data.id;
          var message = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–≤–µ–∂–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∞–∫–∞–Ω—Å–∏–π, –ø–æ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É. –í–≤–µ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Ü–∏—Ñ—Ä—É:\n1Ô∏è‚É£ –¢–æ–ø-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ .\n2Ô∏è‚É£ –ê–≤—Ç–æ–º–æ–±–∏–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å. \n3Ô∏è‚É£ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª. \n4Ô∏è‚É£ –ë–∞–Ω–∫–∏, —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ, –ª–∏–∑–∏–Ω–≥. \n5Ô∏è‚É£ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å, –æ—Ö—Ä–∞–Ω–∞. \n6Ô∏è‚É£ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è. \n7Ô∏è‚É£ –ù–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏. \n8Ô∏è‚É£ –î–∏–∑–∞–π–Ω, –∏—Å–∫—É—Å—Å—Ç–≤–æ, —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è. \n9Ô∏è‚É£ –î–æ–º–∞—à–Ω–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª. \n1‚É£0‚É£ –ó–∞–∫—É–ø–∫–∏, –ø–æ—Å—Ç–∞–≤–∫–∏, –í–≠–î . \n1‚É£1‚É£ –ò–Ω—Ç–µ—Ä–Ω–µ—Ç, IT, —Ç–µ–ª–µ–∫–æ–º, —Å–≤—è–∑—å. \n1‚É£2‚É£ –õ–æ–≥–∏—Å—Ç–∏–∫–∞, —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç, —Å–∫–ª–∞–¥. \n1‚É£3‚É£ –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥, —Ä–µ–∫–ª–∞–º–∞, PR. \n1‚É£4‚É£  –ú–µ–¥–∏—Ü–∏–Ω–∞, —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∏–∫–∞. \n1‚É£5‚É£–ù–∞—É–∫–∞, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ \n1‚É£6‚É£–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤, HR. \n1‚É£7‚É£–ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞, —Å–µ–∑–æ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞. \n1‚É£8‚É£–ü—Ä–æ–¥–∞–∂–∏ (—Ä–∞–±–æ—Ç–∞ –≤ –æ—Ñ–∏—Å–µ). \n1‚É£9‚É£–ü—Ä–æ–¥–∞–∂–∏ (—Ä–æ–∑–Ω–∏—á–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è).\n Ô∏è2‚É£0‚É£–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ—Å—Ç—å.\n2‚É£1‚É£ –†–∞–±–æ—á–∏–π –ø–µ—Ä—Å–æ–Ω–∞–ª.\n2‚É£2‚É£–ü–æ–≤–∞—Ä–∞, –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—ã.\n2‚É£3‚É£–°–ú–ò, –ø–æ–ª–∏–≥—Ä–∞—Ñ–∏—è."
          + "\n Ô∏è2‚É£4‚É£–°–ø–æ—Ä—Ç, —Å–∞–ª–æ–Ω—ã –∫—Ä–∞—Å–æ—Ç—ã. \n2‚É£5‚É£–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ, –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å.\n2‚É£6‚É£–¢—É—Ä–∏–∑–º, –≥–æ—Å—Ç–∏–Ω–∏—Ü—ã. \n 2‚É£7‚É£–£—Å–ª—É–≥–∏, —Ä–µ–º–æ–Ω—Ç.\n2‚É£8‚É£–Æ—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏—è. \n2‚É£9‚É£–†–∞–±–æ—Ç–∞ –¥–ª—è –º–æ–ª–æ–¥–µ–∂–∏.\n3‚É£0‚É£–ë–µ–∑ –æ–ø—ã—Ç–∞ —Ä–∞–±–æ—Ç—ã, –Ω–∞—á–∞–ª–æ –∫–∞—Ä—å–µ—Ä—ã.";
          sms(message, chatId, ip);
        })
      });
    }
    if(event == "message/new") {
      var userId = req.body.data.sender_id;
      db.find({where: {userId: userId}})
      .then(function(user) {

      	var content = req.body.data.content;
      	var chatId = req.body.data.chat_id;
        var subscribed = user.subscribed;
        var branch = user.branch;
        console.log(subscribed + ' - ' + branch);
      	if(req.body.data.type != 'text/plain') {
      		console.log(errMessage);
      		sms(errMessage, chatId, ip);
      		return;
      	}
        if (user.state){
          let errMessage = "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. " + selectField();
          let correctAnswer = [];
          for (var i = 1; i <= 30; i++) {
              correctAnswer.push(i.toString());
          }
          if (correctAnswer.indexOf(content)>= 0) {
            let message = "–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é '" + dict(content).title + "'.";
            db.update({branch: dict(content).branch, state:false}, {where: {userId: userId}}).then(function(user) {
              sms(message, chatId, ip, function() {
                setTimeout(function() {
                  sms(allComands(subscribed), chatId, ip);
                }, 3000);
              })
            })
          } else {
        		sms(errMessage, chatId, ip);
          }
        } else {
          var errMessage = "–ù–µ–≤–µ—Ä–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. " + allComands(subscribed);

            if(content == "–°–º–µ–Ω–∏—Ç—å"){
              db.update({state: true}, {where: {userId: userId}}).then(function(user) {
                sms(selectField(), chatId, ip);
              })
            }
            else if(content == "5"){
              parser(branch,5).then((data)=>{
                Promise.all([
                  new_sms('üíº'+data[0].title+'\nüí∞'+data[0].salary+'\nüè≠'+data[0].company+'\nüìç'+data[0].address+'\nüí¨'+data[0].apropos+'\nüîó'+data[0].link,chatId,ip),
                  new_sms('üíº'+data[1].title+'\nüí∞'+data[1].salary+'\nüè≠'+data[1].company+'\nüìç'+data[1].address+'\nüí¨'+data[1].apropos+'\nüîó'+data[1].link,chatId,ip),
                  new_sms('üíº'+data[2].title+'\nüí∞'+data[2].salary+'\nüè≠'+data[2].company+'\nüìç'+data[2].address+'\nüí¨'+data[2].apropos+'\nüîó'+data[2].link,chatId,ip),
                  new_sms('üíº'+data[3].title+'\nüí∞'+data[3].salary+'\nüè≠'+data[3].company+'\nüìç'+data[3].address+'\nüí¨'+data[3].apropos+'\nüîó'+data[3].link,chatId,ip),
                  new_sms('üíº'+data[4].title+'\nüí∞'+data[4].salary+'\nüè≠'+data[4].company+'\nüìç'+data[4].address+'\nüí¨'+data[4].apropos+'\nüîó'+data[4].link,chatId,ip),

                ]).then((messages)=>{
                  console.log(messages);
                }).catch((error)=>{
                  console.log(error);
                })

              }).catch((error)=>{
                console.log(error);
              })
            }
            else if (content == "–ü–æ–¥–ø–∏—Å–∫–∞") {
              if(subscribed) {
                db.update({subscribed: false}, {where: {userId: userId}}).then(function(user) {
                  let message = "–í—ã –æ—Ç–∫–ª—é—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É. "+allComands(!subscribed);
                  sms(message, chatId, ip);
                })
              } else {
                db.update({subscribed: true}, {where: {userId: userId}}).then(function(user) {
                  let message = "–í—ã –≤–∫–ª—é—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É. "+allComands(!subscribed);
                  sms(message, chatId, ip);
                })
              }
            } else {
        		  sms(errMessage, chatId, ip);
          }
        }
     })
    }
  res.end();
});



module.exports = router;
